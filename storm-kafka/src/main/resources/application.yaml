name: "yaml-topology"
config:
  topology.workers: 1

components:
  - id: "stringScheme"
    className: "org.apache.storm.kafka.StringScheme"

  - id: "stringMultiScheme"
    className: "org.apache.storm.spout.SchemeAsMultiScheme"
    constructorArgs:
      - ref: "stringScheme"

  - id: "zkHosts"
    className: "org.apache.storm.kafka.ZkHosts"
    constructorArgs:
      - "localhost:2181"

# 可选的kafka配置
#  - id: "kafkaConfig"
#    className: "org.apache.storm.kafka.KafkaConfig"
#    constructorArgs:
#      # brokerHosts
#      - ref: "zkHosts"
#      # topic
#      - "myKafkaTopic"
#      # clientId (optional)
#      - "myKafkaClientId"

  - id: "spoutConfig"
    className: "org.apache.storm.kafka.SpoutConfig"
    constructorArgs:
      # brokerHosts
      - ref: "zkHosts"
      # topic
      - "myKafkaTopic"
      # zkRoot
      - "/kafkaSpout"
      # id
      - "myId"
    properties:
      - name: "ignoreZkOffsets"
        value: true
      - name: "scheme"
        ref: "stringMultiScheme"


# spout定义
spouts:
  - id: "spout_sentence"
    className: "org.roc.storm.flux.wordcount.spout.RandomSentenceSpout"
    parallelism: 1

# bolt定义
bolts:
  - id: "bolt_split"
    className: "org.roc.storm.flux.wordcount.bolt.SplitSentenceBolt"
    parallelism: 1

  - id: "bolt_word_count"
    className: "org.roc.storm.flux.wordcount.bolt.WordCount"
    parallelism: 2

  - id: "bolt_logger"
    className: "org.roc.storm.flux.wordcount.bolt.LogInfoBolt"
    parallelism: 3

# stream定义
streams:
#name暂时未用上（可以在logging,UI等中作为placeholder）
  - name: "spout_sentence --> bolt_split"
    from: "spout_sentence"
    to: "bolt_split"
    grouping:
      type: LOCAL_OR_SHUFFLE

  - name: "bolt_split --> bolt_word_count"
    from: "bolt_split"
    to: "bolt_word_count"
    grouping:
      type: FIELDS
      args: ["word"]

  - name: "bolt_word_count --> bolt_logger"
    from: "bolt_word_count"
    to: "bolt_logger"
    grouping:
      type: LOCAL_OR_SHUFFLE
